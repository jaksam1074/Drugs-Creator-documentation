{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This is the official Advanced Drugs Creator documentation Official FiveM post Tebex page","title":"Home"},{"location":"qb-core_installation/","text":"QB-Core installation tutorial The installation for QB-Core it's a bit longer than the ESX one where it's almost all automated Adding the items To add the new items, you have to edit qb-core/shared/items.lua file and add at the bottom of the table the following code [ 'ammonium_nitrate' ] = {[ 'name' ] = 'ammonium_nitrate' , [ 'label' ] = 'Ammonium nitrate' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'carbon' ] = {[ 'name' ] = 'carbon' , [ 'label' ] = 'Carbon' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'codeine' ] = {[ 'name' ] = 'codeine' , [ 'label' ] = 'Codeine' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drink_sprite' ] = {[ 'name' ] = 'drink_sprite' , [ 'label' ] = 'Sprite' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_ecstasy' ] = {[ 'name' ] = 'drug_ecstasy' , [ 'label' ] = 'Ecstasy' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_lean' ] = {[ 'name' ] = 'drug_lean' , [ 'label' ] = 'Lean' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_lsd' ] = {[ 'name' ] = 'drug_lsd' , [ 'label' ] = 'LSD' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_meth' ] = {[ 'name' ] = 'drug_meth' , [ 'label' ] = 'Meth' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'hydrogen' ] = {[ 'name' ] = 'hydrogen' , [ 'label' ] = 'Hydrogen' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'ice' ] = {[ 'name' ] = 'ice' , [ 'label' ] = 'Ice' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'jolly_ranchers' ] = {[ 'name' ] = 'jolly_ranchers' , [ 'label' ] = 'Jolly Ranchers' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'liquid_sulfur' ] = {[ 'name' ] = 'liquid_sulfur' , [ 'label' ] = 'Liquid Sulfur' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'muriatic_acid' ] = {[ 'name' ] = 'muriatic_acid' , [ 'label' ] = 'Muriatic Acid' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'nitrogen' ] = {[ 'name' ] = 'nitrogen' , [ 'label' ] = 'Nitrogen' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'oxygen' ] = {[ 'name' ] = 'oxygen' , [ 'label' ] = 'Oxygen' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'pseudoefedrine' ] = {[ 'name' ] = 'pseudoefedrine' , [ 'label' ] = 'Pseudoefedrine' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'red_sulfur' ] = {[ 'name' ] = 'red_sulfur' , [ 'label' ] = 'Red Sulfur' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'sodium_hydroxide' ] = {[ 'name' ] = 'sodium_hydroxide' , [ 'label' ] = 'Sodium hydroxide' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'water' ] = {[ 'name' ] = 'water' , [ 'label' ] = 'Water' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'cannabis' ] = {[ 'name' ] = 'cannabis' , [ 'label' ] = 'Cannabis' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'green_gelato_cannabis' ] = {[ 'name' ] = 'green_gelato_cannabis' , [ 'label' ] = 'Green Gelato Cannabis' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'opium' ] = {[ 'name' ] = 'opium' , [ 'label' ] = 'Opium' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'cocaine' ] = {[ 'name' ] = 'cocaine' , [ 'label' ] = 'Cocaine' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, Screenshot example: Installing ESX menu To make the script works, you need to install ESX menu This esx_menu_default script is edited by the creator of QB-Core framework, you can find it in QBCore Discord server in conversion channel, or directly from this link","title":"QB-Core installation tutorial"},{"location":"qb-core_installation/#qb-core-installation-tutorial","text":"The installation for QB-Core it's a bit longer than the ESX one where it's almost all automated","title":"QB-Core installation tutorial"},{"location":"qb-core_installation/#adding-the-items","text":"To add the new items, you have to edit qb-core/shared/items.lua file and add at the bottom of the table the following code [ 'ammonium_nitrate' ] = {[ 'name' ] = 'ammonium_nitrate' , [ 'label' ] = 'Ammonium nitrate' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'carbon' ] = {[ 'name' ] = 'carbon' , [ 'label' ] = 'Carbon' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'codeine' ] = {[ 'name' ] = 'codeine' , [ 'label' ] = 'Codeine' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drink_sprite' ] = {[ 'name' ] = 'drink_sprite' , [ 'label' ] = 'Sprite' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_ecstasy' ] = {[ 'name' ] = 'drug_ecstasy' , [ 'label' ] = 'Ecstasy' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_lean' ] = {[ 'name' ] = 'drug_lean' , [ 'label' ] = 'Lean' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_lsd' ] = {[ 'name' ] = 'drug_lsd' , [ 'label' ] = 'LSD' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'drug_meth' ] = {[ 'name' ] = 'drug_meth' , [ 'label' ] = 'Meth' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'hydrogen' ] = {[ 'name' ] = 'hydrogen' , [ 'label' ] = 'Hydrogen' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'ice' ] = {[ 'name' ] = 'ice' , [ 'label' ] = 'Ice' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'jolly_ranchers' ] = {[ 'name' ] = 'jolly_ranchers' , [ 'label' ] = 'Jolly Ranchers' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'liquid_sulfur' ] = {[ 'name' ] = 'liquid_sulfur' , [ 'label' ] = 'Liquid Sulfur' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'muriatic_acid' ] = {[ 'name' ] = 'muriatic_acid' , [ 'label' ] = 'Muriatic Acid' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'nitrogen' ] = {[ 'name' ] = 'nitrogen' , [ 'label' ] = 'Nitrogen' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'oxygen' ] = {[ 'name' ] = 'oxygen' , [ 'label' ] = 'Oxygen' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'pseudoefedrine' ] = {[ 'name' ] = 'pseudoefedrine' , [ 'label' ] = 'Pseudoefedrine' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'red_sulfur' ] = {[ 'name' ] = 'red_sulfur' , [ 'label' ] = 'Red Sulfur' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'sodium_hydroxide' ] = {[ 'name' ] = 'sodium_hydroxide' , [ 'label' ] = 'Sodium hydroxide' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'water' ] = {[ 'name' ] = 'water' , [ 'label' ] = 'Water' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'cannabis' ] = {[ 'name' ] = 'cannabis' , [ 'label' ] = 'Cannabis' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'green_gelato_cannabis' ] = {[ 'name' ] = 'green_gelato_cannabis' , [ 'label' ] = 'Green Gelato Cannabis' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'opium' ] = {[ 'name' ] = 'opium' , [ 'label' ] = 'Opium' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'cocaine' ] = {[ 'name' ] = 'cocaine' , [ 'label' ] = 'Cocaine' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = true , [ 'shouldClose' ] = false , [ 'combinable' ] = nil },","title":"Adding the items"},{"location":"qb-core_installation/#screenshot-example","text":"","title":"Screenshot example:"},{"location":"qb-core_installation/#installing-esx-menu","text":"To make the script works, you need to install ESX menu This esx_menu_default script is edited by the creator of QB-Core framework, you can find it in QBCore Discord server in conversion channel, or directly from this link","title":"Installing ESX menu"},{"location":"client/drugs_effects/drugEffects/","text":"Trigger to start drug effects (you may prefer to trigger this from server side) Event TriggerEvent ( \"advanced_drugs_creator:drugEffects\" , takingMethod , effects , effectsDuration ) Parameters Name Data Type Description takingMethod string How the player will take the drug effects table An array of strings containing all effects you want to add effectsDuration integer Seconds the effects will last Taking methods \"pill\" \"drink\" \"smoke\" \"needle\" Effects \"visual_shaking\" \"drunk_walk\" \"fall\" \"pink_visual\" \"green_visual\" \"confused_visual\" \"armor50\" \"armor100\" \"health50\" \"health100\" \"sprint_faster\" \"swim_faster\" \"infinite_stamina\" Example - Client side RegisterCommand ( \"effects\" , function () local takingMethod = \"pill\" local effects = { \"drunk_walk\" , \"swim_faster\" , \"green_visual\" , } local effectsDuration = 120 -- seconds TriggerEvent ( \"advanced_drugs_creator:drugEffects\" , takingMethod , effects , effectsDuration ) end Example - Server side RegisterCommand ( \"effects\" , function ( playerId ) local takingMethod = \"pill\" local effects = { \"drunk_walk\" , \"swim_faster\" , \"green_visual\" , } local effectsDuration = 120 -- seconds TriggerClientEvent ( \"advanced_drugs_creator:drugEffects\" , playerId , takingMethod , effects , effectsDuration ) end )","title":"drugEffects"},{"location":"client/drugs_effects/drugEffects/#event","text":"TriggerEvent ( \"advanced_drugs_creator:drugEffects\" , takingMethod , effects , effectsDuration )","title":"Event"},{"location":"client/drugs_effects/drugEffects/#parameters","text":"Name Data Type Description takingMethod string How the player will take the drug effects table An array of strings containing all effects you want to add effectsDuration integer Seconds the effects will last","title":"Parameters"},{"location":"client/drugs_effects/drugEffects/#taking-methods","text":"\"pill\" \"drink\" \"smoke\" \"needle\"","title":"Taking methods"},{"location":"client/drugs_effects/drugEffects/#effects","text":"\"visual_shaking\" \"drunk_walk\" \"fall\" \"pink_visual\" \"green_visual\" \"confused_visual\" \"armor50\" \"armor100\" \"health50\" \"health100\" \"sprint_faster\" \"swim_faster\" \"infinite_stamina\"","title":"Effects"},{"location":"client/drugs_effects/drugEffects/#example-client-side","text":"RegisterCommand ( \"effects\" , function () local takingMethod = \"pill\" local effects = { \"drunk_walk\" , \"swim_faster\" , \"green_visual\" , } local effectsDuration = 120 -- seconds TriggerEvent ( \"advanced_drugs_creator:drugEffects\" , takingMethod , effects , effectsDuration ) end","title":"Example - Client side"},{"location":"client/drugs_effects/drugEffects/#example-server-side","text":"RegisterCommand ( \"effects\" , function ( playerId ) local takingMethod = \"pill\" local effects = { \"drunk_walk\" , \"swim_faster\" , \"green_visual\" , } local effectsDuration = 120 -- seconds TriggerClientEvent ( \"advanced_drugs_creator:drugEffects\" , playerId , takingMethod , effects , effectsDuration ) end )","title":"Example - Server side"},{"location":"client/notifications/notify/","text":"Triggered after notifying player client side Event AddEventHandler ( \"advanced_drugs_creator:notify\" , function ( message , uncoloredMessage ) end ) Parameters Name Data Type Description message string Message of the notification uncoloredMessage string Message of the notification but without ~r~, ~g~, etc. Example (you can place it in the folder integrations/cl_integrations.lua of the script) RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () -- Disables the default script notification (otherwise there would be 2 notifications) exports [ \"advanced_drugs_creator\" ]: disableScriptEvent ( \"advanced_drugs_creator:notify\" ) end ) RegisterNetEvent ( \"advanced_drugs_creator:notify\" , function ( message , uncoloredMessage ) TriggerEvent ( \"external_script:notify\" , message ) end )","title":"Notify"},{"location":"client/notifications/notify/#event","text":"AddEventHandler ( \"advanced_drugs_creator:notify\" , function ( message , uncoloredMessage ) end )","title":"Event"},{"location":"client/notifications/notify/#parameters","text":"Name Data Type Description message string Message of the notification uncoloredMessage string Message of the notification but without ~r~, ~g~, etc.","title":"Parameters"},{"location":"client/notifications/notify/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () -- Disables the default script notification (otherwise there would be 2 notifications) exports [ \"advanced_drugs_creator\" ]: disableScriptEvent ( \"advanced_drugs_creator:notify\" ) end ) RegisterNetEvent ( \"advanced_drugs_creator:notify\" , function ( message , uncoloredMessage ) TriggerEvent ( \"external_script:notify\" , message ) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/notifications/showHelpNotification/","text":"Used to show the usual Press E to ... at the top left of the player's screen Export exports [ \"advanced_drugs_creator\" ]: replaceShowHelpNotification ( customFunction ) Parameters Name Data Type Description customFunction function A function that will replace the default ESX.ShowHelpNotification method. Requires the message parameter and will be called each frame Example (you can place it in the folder integrations/cl_integrations.lua of the script) local function myCustomHelpNotification ( message ) -- Customize your function to fit your needs print ( message ) ExternalScript . showHelpNotification ( message ) end RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () -- This will replace the base function with the one you want exports [ \"advanced_drugs_creator\" ]: replaceShowHelpNotification ( myCustomHelpNotification ) end )","title":"showHelpNotification"},{"location":"client/notifications/showHelpNotification/#export","text":"exports [ \"advanced_drugs_creator\" ]: replaceShowHelpNotification ( customFunction )","title":"Export"},{"location":"client/notifications/showHelpNotification/#parameters","text":"Name Data Type Description customFunction function A function that will replace the default ESX.ShowHelpNotification method. Requires the message parameter and will be called each frame","title":"Parameters"},{"location":"client/notifications/showHelpNotification/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"local function myCustomHelpNotification ( message ) -- Customize your function to fit your needs print ( message ) ExternalScript . showHelpNotification ( message ) end RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () -- This will replace the base function with the one you want exports [ \"advanced_drugs_creator\" ]: replaceShowHelpNotification ( myCustomHelpNotification ) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/npc_selling/acceptedDrug/","text":"Triggered after a NPC accepts the drug, and so you can create your custom animation Event AddEventHandler ( \"advanced_drugs_creator:npc:acceptedDrug\" , function ( targetPedNetworkId ) end ) Parameters Name Data Type Description targetPedNetworkId ped network ID The network ID of the ped who accepted to purchase the drug Example RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () -- Disables the default script animations for the npc sell (otherwise there would be 2 animations) exports [ \"advanced_drugs_creator\" ]: disableScriptEvent ( \"advanced_drugs_creator:npc:acceptedDrug\" ) end ) -- New animation for NPCs RegisterNetEvent ( \"advanced_drugs_creator:npc:acceptedDrug\" , function ( targetPedNetworkId ) local plyPed = PlayerPedId () local plyCoords = GetEntityCoords ( plyPed ) local targetPed = NetworkGetEntityFromNetworkId ( pedNetId ) local targetCoords = GetEntityCoords ( targetPed ) local animDict = \"mp_common\" local animName = \"givetake1_b\" while not HasAnimDictLoaded ( animDict ) do Citizen . Wait ( 0 ) RequestAnimDict ( animDict ) end local distance = # ( targetCoords - plyCoords ) if ( distance < 1.5 ) then TaskPlayAnim ( targetPed , animDict , animName , 4.0 , - 4.0 , - 1 , 1 , 0.0 , false , false , false ) Citizen . Wait ( math.random ( 200 , 500 )) TaskPlayAnim ( plyPed , animDict , animName , 4.0 , - 4.0 , - 1 , 1 , 0.0 , false , false , false ) else local plyHeading = GetEntityHeading ( plyPed ) local netScene = CreateSynchronizedScene ( plyCoords - vector3 ( 0.0 , 0.0 , 1.0 ), vector3 ( 0.0 , 0.0 , plyHeading ), 2 ) local netSceneTarget = CreateSynchronizedScene ( plyCoords - vector3 ( 0.0 , 0.0 , 1.0 ), vector3 ( 0.0 , 0.0 , plyHeading - 180.0 ), 2 ) TaskSynchronizedScene ( plyPed , netScene , animDict , animName , 1.0 , 1.0 , - 1 , 1 , 1.0 , 0.0 ) TaskSynchronizedScene ( targetPed , netSceneTarget , animDict , animName , 1.0 , 1.0 , - 1 , 1 , 1.0 , 0.0 ) SetSynchronizedSceneLooped ( netScene , true ) SetSynchronizedSceneLooped ( netSceneTarget , true ) end Citizen . Wait ( config . npcSecondsToSell * 1000 ) ClearPedTasks ( targetPed ) ClearPedTasks ( plyPed ) end )","title":"acceptedDrug"},{"location":"client/npc_selling/acceptedDrug/#event","text":"AddEventHandler ( \"advanced_drugs_creator:npc:acceptedDrug\" , function ( targetPedNetworkId ) end )","title":"Event"},{"location":"client/npc_selling/acceptedDrug/#parameters","text":"Name Data Type Description targetPedNetworkId ped network ID The network ID of the ped who accepted to purchase the drug","title":"Parameters"},{"location":"client/npc_selling/acceptedDrug/#example","text":"RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () -- Disables the default script animations for the npc sell (otherwise there would be 2 animations) exports [ \"advanced_drugs_creator\" ]: disableScriptEvent ( \"advanced_drugs_creator:npc:acceptedDrug\" ) end ) -- New animation for NPCs RegisterNetEvent ( \"advanced_drugs_creator:npc:acceptedDrug\" , function ( targetPedNetworkId ) local plyPed = PlayerPedId () local plyCoords = GetEntityCoords ( plyPed ) local targetPed = NetworkGetEntityFromNetworkId ( pedNetId ) local targetCoords = GetEntityCoords ( targetPed ) local animDict = \"mp_common\" local animName = \"givetake1_b\" while not HasAnimDictLoaded ( animDict ) do Citizen . Wait ( 0 ) RequestAnimDict ( animDict ) end local distance = # ( targetCoords - plyCoords ) if ( distance < 1.5 ) then TaskPlayAnim ( targetPed , animDict , animName , 4.0 , - 4.0 , - 1 , 1 , 0.0 , false , false , false ) Citizen . Wait ( math.random ( 200 , 500 )) TaskPlayAnim ( plyPed , animDict , animName , 4.0 , - 4.0 , - 1 , 1 , 0.0 , false , false , false ) else local plyHeading = GetEntityHeading ( plyPed ) local netScene = CreateSynchronizedScene ( plyCoords - vector3 ( 0.0 , 0.0 , 1.0 ), vector3 ( 0.0 , 0.0 , plyHeading ), 2 ) local netSceneTarget = CreateSynchronizedScene ( plyCoords - vector3 ( 0.0 , 0.0 , 1.0 ), vector3 ( 0.0 , 0.0 , plyHeading - 180.0 ), 2 ) TaskSynchronizedScene ( plyPed , netScene , animDict , animName , 1.0 , 1.0 , - 1 , 1 , 1.0 , 0.0 ) TaskSynchronizedScene ( targetPed , netSceneTarget , animDict , animName , 1.0 , 1.0 , - 1 , 1 , 1.0 , 0.0 ) SetSynchronizedSceneLooped ( netScene , true ) SetSynchronizedSceneLooped ( netSceneTarget , true ) end Citizen . Wait ( config . npcSecondsToSell * 1000 ) ClearPedTasks ( targetPed ) ClearPedTasks ( plyPed ) end )","title":"Example"},{"location":"client/npc_selling/addPedToNPCSellingBlacklist/","text":"To add a ped to NPC selling blacklist, so players won't be able to sell to the ped (example: blackjack dealers, shop keepers, etc.) Event exports [ \"advanced_drugs_creator\" ]: addPedToNPCSellingBlacklist ( ped ) Parameters Name Data Type Description ped ped (integer) The target ped's handle Example RegisterNetEvent ( 'advanced_drugs_creator:framework:ready' , function () local closestPed = ESX . Game . GetClosestPed () exports [ \"advanced_drugs_creator\" ]: addPedToNPCSellingBlacklist ( closestPed ) end )","title":"addPedToNPCSellingBlacklist"},{"location":"client/npc_selling/addPedToNPCSellingBlacklist/#event","text":"exports [ \"advanced_drugs_creator\" ]: addPedToNPCSellingBlacklist ( ped )","title":"Event"},{"location":"client/npc_selling/addPedToNPCSellingBlacklist/#parameters","text":"Name Data Type Description ped ped (integer) The target ped's handle","title":"Parameters"},{"location":"client/npc_selling/addPedToNPCSellingBlacklist/#example","text":"RegisterNetEvent ( 'advanced_drugs_creator:framework:ready' , function () local closestPed = ESX . Game . GetClosestPed () exports [ \"advanced_drugs_creator\" ]: addPedToNPCSellingBlacklist ( closestPed ) end )","title":"Example"},{"location":"client/npc_selling/disableDefaultSellingMethodNPC/","text":"Trigger to disable the prompt above NPCs \"Press E to sell drugs\" If you disable the prompt, you have to manually trigger the advanced_drugs_creator:sellToNPC event to sell to NPCs Event TriggerEvent ( \"advanced_drugs_creator:disableDefaultSellingMethodNPC\" ) Example -- Disables the prompt RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () TriggerEvent ( \"advanced_drugs_creator:disableDefaultSellingMethodNPC\" ) end ) -- Manually sell to an NPC (example for targeting scripts) Citizen . CreateThread ( function () local closestPed = ESX . Game . GetClosestPed () TriggerEvent ( \"advanced_drugs_creator:sellToNPC\" , closestPed ) end )","title":"disableDefaultSellingMethodNPC"},{"location":"client/npc_selling/disableDefaultSellingMethodNPC/#event","text":"TriggerEvent ( \"advanced_drugs_creator:disableDefaultSellingMethodNPC\" )","title":"Event"},{"location":"client/npc_selling/disableDefaultSellingMethodNPC/#example","text":"-- Disables the prompt RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () TriggerEvent ( \"advanced_drugs_creator:disableDefaultSellingMethodNPC\" ) end ) -- Manually sell to an NPC (example for targeting scripts) Citizen . CreateThread ( function () local closestPed = ESX . Game . GetClosestPed () TriggerEvent ( \"advanced_drugs_creator:sellToNPC\" , closestPed ) end )","title":"Example"},{"location":"client/npc_selling/removePedFromNPCSellingBlacklist/","text":"To remove a ped from NPC selling blacklist, the opposite of the export addPedToNPCSellingBlacklist Event exports [ \"advanced_drugs_creator\" ]: removePedFromNPCSellingBlacklist ( ped ) Parameters Name Data Type Description ped ped (integer) The target ped's handle Example RegisterNetEvent ( 'advanced_drugs_creator:framework:ready' , function () local closestPed = ESX . Game . GetClosestPed () exports [ \"advanced_drugs_creator\" ]: removePedFromNPCSellingBlacklist ( closestPed ) end )","title":"removePedFromNPCSellingBlacklist"},{"location":"client/npc_selling/removePedFromNPCSellingBlacklist/#event","text":"exports [ \"advanced_drugs_creator\" ]: removePedFromNPCSellingBlacklist ( ped )","title":"Event"},{"location":"client/npc_selling/removePedFromNPCSellingBlacklist/#parameters","text":"Name Data Type Description ped ped (integer) The target ped's handle","title":"Parameters"},{"location":"client/npc_selling/removePedFromNPCSellingBlacklist/#example","text":"RegisterNetEvent ( 'advanced_drugs_creator:framework:ready' , function () local closestPed = ESX . Game . GetClosestPed () exports [ \"advanced_drugs_creator\" ]: removePedFromNPCSellingBlacklist ( closestPed ) end )","title":"Example"},{"location":"client/npc_selling/sellToNPC/","text":"Trigger to start selling to an NPC, as you would do after pressing E to sell in the default method Event TriggerEvent ( \"advanced_drugs_creator:sellToNPC\" , ped ) Parameters Name Data Type Description ped ped (integer) The target ped's handle Example local closestPed = ESX . Game . GetClosestPed () TriggerEvent ( \"advanced_drugs_creator:sellToNPC\" , closestPed )","title":"sellToNPC"},{"location":"client/npc_selling/sellToNPC/#event","text":"TriggerEvent ( \"advanced_drugs_creator:sellToNPC\" , ped )","title":"Event"},{"location":"client/npc_selling/sellToNPC/#parameters","text":"Name Data Type Description ped ped (integer) The target ped's handle","title":"Parameters"},{"location":"client/npc_selling/sellToNPC/#example","text":"local closestPed = ESX . Game . GetClosestPed () TriggerEvent ( \"advanced_drugs_creator:sellToNPC\" , closestPed )","title":"Example"},{"location":"client/police_alert/alertedPolice/","text":"Triggered when police is alerted Event RegisterNetEvent ( \"advanced_drugs_creator:alertedPolice\" , function ( coords ) end ) Parameters Name Data Type Description coords vector3 Coordinates where a player tried to sell drugs Example (you can place it in the folder integrations/cl_integrations.lua of the script) -- Disables the default police alert RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () exports [ \"advanced_drugs_creator\" ]: disableScriptEvent ( \"advanced_drugs_creator:alertedPolice\" ) end ) RegisterNetEvent ( \"advanced_drugs_creator:alertedPolice\" , function ( coords ) -- Do something end )","title":"alertedPolice"},{"location":"client/police_alert/alertedPolice/#event","text":"RegisterNetEvent ( \"advanced_drugs_creator:alertedPolice\" , function ( coords ) end )","title":"Event"},{"location":"client/police_alert/alertedPolice/#parameters","text":"Name Data Type Description coords vector3 Coordinates where a player tried to sell drugs","title":"Parameters"},{"location":"client/police_alert/alertedPolice/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"-- Disables the default police alert RegisterNetEvent ( \"advanced_drugs_creator:framework:ready\" , function () exports [ \"advanced_drugs_creator\" ]: disableScriptEvent ( \"advanced_drugs_creator:alertedPolice\" ) end ) RegisterNetEvent ( \"advanced_drugs_creator:alertedPolice\" , function ( coords ) -- Do something end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"server/Fields/itemHarvested/","text":"Item harvested Triggered after an item has been harvested in a field Event RegisterNetEvent ( \"advanced_drugs_creator:fields:itemHarvested\" , function ( playerId , fieldId , itemName , itemQuantity ) end ) Parameters Name Data Type Description playerId int Player server ID fieldId int Field ID where the item was harvested itemName string Item ID just harvested itemQuantity int Item quantity harvested Example -- An example for a xp system RegisterNetEvent ( \"advanced_drugs_creator:fields:itemHarvested\" , function ( playerId , fieldId , itemName , itemQuantity ) TriggerEvent ( \"xp_system:addXp\" , playerId , itemName , itemQuantity ) end )","title":"Item harvested"},{"location":"server/Fields/itemHarvested/#item-harvested","text":"Triggered after an item has been harvested in a field","title":"Item harvested"},{"location":"server/Fields/itemHarvested/#event","text":"RegisterNetEvent ( \"advanced_drugs_creator:fields:itemHarvested\" , function ( playerId , fieldId , itemName , itemQuantity ) end )","title":"Event"},{"location":"server/Fields/itemHarvested/#parameters","text":"Name Data Type Description playerId int Player server ID fieldId int Field ID where the item was harvested itemName string Item ID just harvested itemQuantity int Item quantity harvested","title":"Parameters"},{"location":"server/Fields/itemHarvested/#example","text":"-- An example for a xp system RegisterNetEvent ( \"advanced_drugs_creator:fields:itemHarvested\" , function ( playerId , fieldId , itemName , itemQuantity ) TriggerEvent ( \"xp_system:addXp\" , playerId , itemName , itemQuantity ) end )","title":"Example"},{"location":"server/Harvestable%20Items/itemHarvested/","text":"Item harvested Triggered after an harvestable item has been harvested Event RegisterNetEvent ( \"advanced_drugs_creator:harvest:itemHarvested\" , function ( playerId , itemName , itemQuantity ) end ) Parameters Name Data Type Description playerId int Player server ID itemName string Item ID just harvested itemQuantity int Item quantity harvested Example -- An example for a xp system RegisterNetEvent ( \"advanced_drugs_creator:harvest:itemHarvested\" , function ( playerId , itemName , itemQuantity ) TriggerEvent ( \"xp_system:addXp\" , playerId , itemQuantity ) end )","title":"Item harvested"},{"location":"server/Harvestable%20Items/itemHarvested/#item-harvested","text":"Triggered after an harvestable item has been harvested","title":"Item harvested"},{"location":"server/Harvestable%20Items/itemHarvested/#event","text":"RegisterNetEvent ( \"advanced_drugs_creator:harvest:itemHarvested\" , function ( playerId , itemName , itemQuantity ) end )","title":"Event"},{"location":"server/Harvestable%20Items/itemHarvested/#parameters","text":"Name Data Type Description playerId int Player server ID itemName string Item ID just harvested itemQuantity int Item quantity harvested","title":"Parameters"},{"location":"server/Harvestable%20Items/itemHarvested/#example","text":"-- An example for a xp system RegisterNetEvent ( \"advanced_drugs_creator:harvest:itemHarvested\" , function ( playerId , itemName , itemQuantity ) TriggerEvent ( \"xp_system:addXp\" , playerId , itemQuantity ) end )","title":"Example"},{"location":"server/npc_selling/soldToNPC/","text":"Triggered after a NPC selling sale Event RegisterNetEvent ( \"advanced_drugs_creator:soldToNPC\" , function ( playerId , drugName , drugQuantity , totalDrugPrice ) end ) Parameters Name Data Type Description playerId int Player server ID drugName string Item ID of the drug just sold drugQuantity int Item quantity sold totalDrugPrice int Total money that the player received Example RegisterNetEvent ( \"advanced_drugs_creator:soldToNPC\" , function ( playerId , drugName , drugQuantity , totalDrugPrice ) local xPlayer = ESX . GetPlayerFromId ( playerId ) local random = math.random ( 1 , 2 ) if ( drugName == \"weed\" and random == 1 ) then xPlayer . addInventoryItem ( \"weed\" , 3 ) xPlayer . showNotification ( \"Here you have 3 bonus weed\" ) end end )","title":"soldToNPC"},{"location":"server/npc_selling/soldToNPC/#event","text":"RegisterNetEvent ( \"advanced_drugs_creator:soldToNPC\" , function ( playerId , drugName , drugQuantity , totalDrugPrice ) end )","title":"Event"},{"location":"server/npc_selling/soldToNPC/#parameters","text":"Name Data Type Description playerId int Player server ID drugName string Item ID of the drug just sold drugQuantity int Item quantity sold totalDrugPrice int Total money that the player received","title":"Parameters"},{"location":"server/npc_selling/soldToNPC/#example","text":"RegisterNetEvent ( \"advanced_drugs_creator:soldToNPC\" , function ( playerId , drugName , drugQuantity , totalDrugPrice ) local xPlayer = ESX . GetPlayerFromId ( playerId ) local random = math.random ( 1 , 2 ) if ( drugName == \"weed\" and random == 1 ) then xPlayer . addInventoryItem ( \"weed\" , 3 ) xPlayer . showNotification ( \"Here you have 3 bonus weed\" ) end end )","title":"Example"}]}